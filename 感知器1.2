class Perceptron: 
    def aa(self):
        c = eval(input("请输入矩阵c:\n"))
        return c
    def dd(self):
        import ast
        b = ast.literal_eval(input("请输入列表b，使用逗号隔开: ")) 
        return b
    def __init__(self,m,n,w):    
        self.m=m
        self.n=n
        self.w=w
    def f(self,x):
        return 1 if x > 0 else 0
    
    def bb(self,p,q):
        import random
        a=self.aa()
        gg=self.dd()
        n=int(input('输入次数：'))
        for r in range(n):
            j=[0,1,2,3]
            i=random.choice(j)   
            k=a[i]
            e=list(map(lambda x,y:x*y,k,self.w))
            t=e[0]+e[1]
            t=t+self.m
            self.w[0]=self.w[0]+self.n*(gg[i]-self.f(t))*k[0]
            self.w[1]=self.w[1]+self.n*(gg[i]-self.f(t))*k[1]
            self.m=self.m+self.n*(gg[i]-self.f(t))
        return self.w[0]*p+self.w[1]*q+self.m
    def and_(self):
        import ast
        z=ast.literal_eval(input("请输入测试数据[0,0]or[0,1]or[1,0]or[1,1]:"))
        z1=z[0]
        z2=z[1]
        h1=self.bb(z1,z2)
        return self.f(h1)
p=Perceptron(0,0.01,[0,0])
p.and_()
